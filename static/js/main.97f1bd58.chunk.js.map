{"version":3,"sources":["components/landingpage.js","components/resume.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js","components/headshot.png"],"names":["LandingPage","style","width","margin","className","col","src","require","alt","href","rel","target","aria-hidden","Component","Resume","Projects","props","state","activeTab","this","shadow","minWidth","color","height","background","border","colored","name","onChange","tabId","setState","ripple","toggleCategories","Main","exact","path","component","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.97f1bd58.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Grid, Cell} from 'react-mdl';\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Grid className=\"landing-grid\">\n                    <Cell col={12}>\n                        <img src={require(\"./headshot.png\")}\n                        alt=\"headshot\"\n                        className=\"headshot-image\"/>\n                    </Cell>\n                    <div className=\"banner-text\">\n                        <h1>Patrick Liu</h1>\n                        <h2>2nd Year Computer Science Student at Georgia Tech</h2>\n                        <hr/>\n                        <p>Java | Python | Node.js | HTML/CSS | SQL | Javascript</p>\n                        <div className=\"social-links\">\n                            <a href=\"http://linkedin.com/in/patrickliu2000\" rel=\"noopener noreferrer\"target=\"_blank\">\n                                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"></i>\n                            </a>\n                            \n                            <a href=\"http://github.com/patrickliu2000\" rel=\"noopener noreferrer\"target=\"_blank\">\n                                <i className=\"fa fa-github-square\" aria-hidden=\"true\"></i>\n                            </a>\n\n                            <a href=\"http://instragram.com/patricksliu\" rel=\"noopener noreferrer\"target=\"_blank\">\n                                <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </Grid>\n            </div>\n        )\n    }\n}\nexport default LandingPage;","import React, {Component} from 'react';\n\nclass Resume extends Component {\n    render() {\n        return (\n            <div><h1>Resume Page</h1></div>\n        )\n    }\n}\nexport default Resume;","import React, {Component} from 'react';\nimport {Tabs, Tab, Grid, Cell , Card, CardActions, CardTitle, Button, CardMenu, IconButton, CardText} from 'react-mdl';\nclass Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {activeTab: 0};\n    }\n    toggleCategories() {\n        if (this.state.activeTab === 0) {\n            return(\n                <div className = \"projects-grid\">\n                    <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                        <CardTitle style={{color: 'black', height: '176px', background:'url(https://vuejs.org/images/logo.png) center / cover'}}>Risk Skirmish Game\n                        </CardTitle>\n                        <CardText>\n                            Risk board game recreated in Scala web application composed of a Akka WebSocket backend and a Vue.js frontend.\n                        </CardText>\n                        <CardActions border>\n                            <Button colored>\n                                <a href=\"https://github.com/PatrickLiu2000/cs2340-risk\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color:\"#41B883\"}}>Github</a>\n                            </Button>\n                            <Button colored>\n                                <a href=\"https://riskgame.ga\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color:\"#41B883\"}}>Live Demo </a>\n                            </Button>\n                        </CardActions>\n                        <CardMenu style={{color:'#fff'}}>\n                            <IconButton name=\"share\"/>\n                        </CardMenu>\n                    </Card>\n                </div>\n            )\n        } \n        else if (this.state.activeTab === 1) {\n            return(\n                <div><h1>This is Vue.js</h1></div>\n            )\n        } \n        else if (this.state.activeTab === 2) {\n            return(\n                <div><h1>This is HTML/CSS</h1></div>\n            )\n        }\n        else if (this.state.activeTab === 3) {\n            return(\n                <div><h1>This is Docker</h1></div>\n            )\n        }\n        else if (this.state.activeTab === 4) {\n            return(\n                <div><h1>This is WebSocket</h1></div>\n            )\n        } \n    }\n    render() {\n        return (\n            <div className=\"category-tabs\">\n                <Tabs activeTab = {this.state.activeTab} onChange={(tabId) => this.setState({activeTab: tabId})}ripple >\n                    <Tab>Scala</Tab>\n                    <Tab>Vue.js/VueX</Tab>\n                    <Tab>HTML/CSS</Tab>\n                    <Tab>Docker/Kubernetes</Tab>\n                    <Tab>WebSocket</Tab>\n                </Tabs>\n                \n                <Grid>\n                    <Cell col={12}>\n                        <div className=\"content\">{this.toggleCategories()}</div>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\nexport default Projects;","import React from 'react';\nimport LandingPage from './landingpage';\nimport Resume from './resume';\nimport Projects from './projects';\nimport {Switch, Route} from 'react-router-dom';\n\nconst Main = () => (\n    <Switch> \n        <Route exact path=\"/\" component={LandingPage}/>\n        <Route path=\"/resume\" component={Resume}/>\n        <Route path=\"/projects\" component={Projects}/>\n    </Switch>\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content} from 'react-mdl';\nimport Main from './components/main';\nimport {Link} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header className = \"header-color\" title=\"Title\" scroll>\n            <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/projects\">Projects</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Title\">\n            <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/projects\">Projects</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/headshot.39df1d7b.png\";"],"sourceRoot":""}